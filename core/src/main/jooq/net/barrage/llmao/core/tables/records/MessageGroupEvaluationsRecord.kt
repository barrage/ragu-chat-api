/*
 * This file is generated by jOOQ.
 */
package net.barrage.llmao.core.tables.records


import java.time.OffsetDateTime
import java.util.UUID

import net.barrage.llmao.core.tables.MessageGroupEvaluations

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class MessageGroupEvaluationsRecord private constructor() : UpdatableRecordImpl<MessageGroupEvaluationsRecord>(MessageGroupEvaluations.MESSAGE_GROUP_EVALUATIONS) {

    open var id: UUID?
        set(value): Unit = set(0, value)
        get(): UUID? = get(0) as UUID?

    open var messageGroupId: UUID
        set(value): Unit = set(1, value)
        get(): UUID = get(1) as UUID

    open var evaluation: Boolean
        set(value): Unit = set(2, value)
        get(): Boolean = get(2) as Boolean

    open var feedback: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(4, value)
        get(): OffsetDateTime? = get(4) as OffsetDateTime?

    open var updatedAt: OffsetDateTime?
        set(value): Unit = set(5, value)
        get(): OffsetDateTime? = get(5) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<UUID?> = super.key() as Record1<UUID?>

    /**
     * Create a detached, initialised MessageGroupEvaluationsRecord
     */
    constructor(id: UUID? = null, messageGroupId: UUID, evaluation: Boolean, feedback: String? = null, createdAt: OffsetDateTime? = null, updatedAt: OffsetDateTime? = null): this() {
        this.id = id
        this.messageGroupId = messageGroupId
        this.evaluation = evaluation
        this.feedback = feedback
        this.createdAt = createdAt
        this.updatedAt = updatedAt
        resetTouchedOnNotNull()
    }
}
