/*
 * This file is generated by jOOQ.
 */
package net.barrage.llmao.core.tables.records


import java.time.OffsetDateTime
import java.util.UUID

import net.barrage.llmao.core.tables.TokenUsage

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class TokenUsageRecord private constructor() : UpdatableRecordImpl<TokenUsageRecord>(TokenUsage.TOKEN_USAGE) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var workflowId: UUID?
        set(value): Unit = set(1, value)
        get(): UUID? = get(1) as UUID?

    open var workflowType: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var userId: String
        set(value): Unit = set(3, value)
        get(): String = get(3) as String

    open var username: String
        set(value): Unit = set(4, value)
        get(): String = get(4) as String

    open var promptTokensAmount: Int?
        set(value): Unit = set(5, value)
        get(): Int? = get(5) as Int?

    open var completionTokensAmount: Int?
        set(value): Unit = set(6, value)
        get(): Int? = get(6) as Int?

    open var totalTokensAmount: Int?
        set(value): Unit = set(7, value)
        get(): Int? = get(7) as Int?

    open var usageType: String
        set(value): Unit = set(8, value)
        get(): String = get(8) as String

    open var model: String
        set(value): Unit = set(9, value)
        get(): String = get(9) as String

    open var provider: String
        set(value): Unit = set(10, value)
        get(): String = get(10) as String

    open var note: String?
        set(value): Unit = set(11, value)
        get(): String? = get(11) as String?

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(12, value)
        get(): OffsetDateTime? = get(12) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised TokenUsageRecord
     */
    constructor(id: Int? = null, workflowId: UUID? = null, workflowType: String? = null, userId: String, username: String, promptTokensAmount: Int? = null, completionTokensAmount: Int? = null, totalTokensAmount: Int? = null, usageType: String, model: String, provider: String, note: String? = null, createdAt: OffsetDateTime? = null): this() {
        this.id = id
        this.workflowId = workflowId
        this.workflowType = workflowType
        this.userId = userId
        this.username = username
        this.promptTokensAmount = promptTokensAmount
        this.completionTokensAmount = completionTokensAmount
        this.totalTokensAmount = totalTokensAmount
        this.usageType = usageType
        this.model = model
        this.provider = provider
        this.note = note
        this.createdAt = createdAt
        resetTouchedOnNotNull()
    }
}
