/*
 * This file is generated by jOOQ.
 */
package net.barrage.llmao.bonvoyage.tables.records


import java.time.OffsetDateTime

import net.barrage.llmao.bonvoyage.tables.BonvoyageTravelManagers

import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("warnings")
open class BonvoyageTravelManagersRecord private constructor() : UpdatableRecordImpl<BonvoyageTravelManagersRecord>(BonvoyageTravelManagers.BONVOYAGE_TRAVEL_MANAGERS) {

    open var userId: String
        set(value): Unit = set(0, value)
        get(): String = get(0) as String

    open var userFullName: String
        set(value): Unit = set(1, value)
        get(): String = get(1) as String

    open var userEmail: String
        set(value): Unit = set(2, value)
        get(): String = get(2) as String

    open var createdAt: OffsetDateTime?
        set(value): Unit = set(3, value)
        get(): OffsetDateTime? = get(3) as OffsetDateTime?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<String?> = super.key() as Record1<String?>

    /**
     * Create a detached, initialised BonvoyageTravelManagersRecord
     */
    constructor(userId: String, userFullName: String, userEmail: String, createdAt: OffsetDateTime? = null): this() {
        this.userId = userId
        this.userFullName = userFullName
        this.userEmail = userEmail
        this.createdAt = createdAt
        resetTouchedOnNotNull()
    }
}
