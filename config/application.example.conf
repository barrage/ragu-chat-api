ktor {
  application {
    modules = ["net.barrage.llmao.ApplicationKt.module"]
  }
  deployment {
    port = 42069
  }
  environment = "development"
  features {
    whatsapp = true
    chonkitAuthServer = true
  }
}

db {
  url = "jdbc:postgresql://localhost:5454/kappi"
  user = "postgres"
  password = "postgres"
  driver = "org.postgresql.Driver"
  runMigrations = true
}

cors {
  origins = ["http://localhost:3000", "http://localhost:3001"]
  methods = ["GET", "HEAD", "PUT", "PATCH", "POST", "DELETE"]
  headers = []
}

llm {
  openai {
    endpoint = "https://api.openai.com/v1/"
    apiKey = "apiKey"
  }
  azure {
    apiVersion = "2023-05-15"
    endpoint = "endpoint"
    apiKey = "apiKey"
  }
  ollama {
    endpoint = "endpoint"
  }
}

embeddings {
  openai {
    endpoint = "https://api.openai.com/v1/"
    apiKey = "apiKey"
  }
  azure {
    endpoint = "https://RESOURCE.openai.azure.com/openai/deployments"
    deployment = "gippitty-text-embedding-ada-002"
    apiVersion = "2023-05-15"
    apiKey = "apiKey"
  }
  fembed {
    endpoint = "http://192.168.106.28:6969"
  }
}

weaviate {
  host = "localhost:8080"
  scheme = "http"
}

oauth {
  google {
    tokenEndpoint = "tokenEndpoint"
    accountEndpoint = "accountEndpoint"
    clientId = "clientId"
    clientSecret = "clientSecret"
  }
  apple {
    endpoint = "https://appleid.apple.com"
    clientId = "clientId"
    serviceId = "serviceId"
    clientSecret = "clientSecret"
    keyId = "keyId"
    teamId = "teamId"
    frontendUrl = "http://localhost:3000"
  }
}

session {
  cookieName = "kappi"
  httpOnly = true
  secure = false
  domain = "localhost"
  sameSite = "Lax"
}

vault {
  endpoint = "endpoint"
  roleId = "role"
  secretId = "secret"
  keyName = "llmao_v1"
}

chonkit {
  jwt {
    issuer = "llmao"
    audience = "chonkit"
    accessTokenDurationSeconds = 600 # 10 minutes
    refreshTokenDurationSeconds = 31536000 # 1 year
    cookie {
      access {
        name = "chonkit_access_token"
        secure = false
        # The domain must match Chonkit's domain only.
        domain = "localhost"
        sameSite = "Lax"
      }
      refresh {
        name = "chonkit_refresh_token"
        secure = false
        # The domain must match Kappi's domain only.
        domain = "localhost"
        sameSite = "Lax"
      }
    }
  }
}

infobip {
  apiKey = "apiKey"
  endpoint = "https://RESOURCE.api.infobip.com"
  template = "welcome_template_name"
}

android {
  namespace = "namespace"
  packageName = "namespace"
  sha256CertFingerprints = [
    "fingerprint"
  ]
}

multiplatform {
  ios {
    appID = "appID"
  }
}